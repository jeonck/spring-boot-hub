# Spring Boot Hub - 기본 웹 애플리케이션 설정
spring:
  application:
    name: spring-boot-hub-basic-web-app

  # 데이터베이스 설정
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  # H2 콘솔 활성화 (개발 환경)
  h2:
    console:
      enabled: true
      path: /h2-console

  # JSON 직렬화 설정
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: NON_NULL

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /api

# 액추에이터 설정 (모니터링)
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, env
  endpoint:
    health:
      show-details: when-authorized

# 로깅 설정
logging:
  level:
    com.springhub.example: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:h2:mem:devdb
    username: dev
    password: dev123

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    root: INFO
    com.springhub.example: DEBUG

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:postgresql://localhost:5432/springhub
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  h2:
    console:
      enabled: false

logging:
  level:
    root: WARN
    com.springhub.example: INFO
  file:
    name: logs/spring-boot-hub.log

server:
  port: 8080